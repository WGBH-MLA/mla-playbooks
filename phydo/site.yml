---
# This playbook deploys the application stack required for Phydo

- name: Install build tools
  hosts: webservers
  remote_user: ec2-user
  roles:
    - { role: gcc, become: true }
    - { role: gcc-c++, become: true }


- name: install and upgrade yum packages
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - yum:  { name: '*', state: latest }
    - yum: { name: 'ruby20', state: removed }
    - yum: { name: 'ruby23', state: present }
    - yum: { name: 'ruby23-devel', state: present }
    - yum: { name: 'zlib-devel', state: present }
    - yum: { name: 'openssl-devel', state: present }
    - yum: { name: 'libffi-devel', state: present }
    - yum: { name: 'ImageMagick', state: present }
  tags:
    - yum-packages

# Required for nokogiri gem install
- name: Install patch
  hosts: webservers
  remote_user: ec2-user
  roles:
    - { role: patch, become: true }

- name: Install libcurl-devel
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - yum: name=libcurl-devel
      become: yes
      become_method: sudo
  tags:
    - libcurl-devel

- name: Install sqlite-devel
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - yum: name=sqlite-devel
      become: yes
      become_method: sudo
  tags:
    - sqlite-devel

# Use FcrepoWrapper and SolrWrapper to spin up instances of
# Fcrepo and Solr. Normally used in development, but we're
# using them for demo instaces of Phydo.
- name: Install SolrWrapper and FcrepoWrapper
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - gem: { name: fcrepo_wrapper, version: '0.9.0', state: present }
    - gem: { name: solr_wrapper, version: '1.2.0', state: present }
  tags:
    - solr_wrapper
    - frepo_wrapper


- name: Install apache webserver
  hosts: webservers
  remote_user: ec2-user
  roles:
    - { role: httpd, become: true }

- name: Install bundler
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - gem: { name: bundle, state: latest }
  tags:
    - bundler

- name: Config apache virtual host
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - file:
        state: directory
        path: /etc/httpd/sites-available
    - file:
        state: directory
        path: /etc/httpd/sites-enabled
    - template:
        src: templates/phydo.conf
        dest: /etc/httpd/sites-available/phydo.conf
    - file:
        state: link
        src: /etc/httpd/sites-available/phydo.conf
        dest: /etc/httpd/sites-enabled/phydo.conf
    - lineinfile:
        dest: /etc/httpd/conf/httpd.conf
        regexp: 'include \/etc\/httpd\/sites-enabled\/'
        line: "include /etc/httpd/sites-enabled/"
  tags:
    - apache-vhost-config

- name: Install Phusion Passenger
  hosts: webservers
  remote_user: ec2-user
  # needs path to ruby gem executables
  environment:
    PATH: /home/ec2-user/bin:{{ ansible_env.PATH }}
  roles:
    - { role: passenger, become: true }
  tags:
    - passenger

- name: Install Git
  hosts: webservers
  remote_user: ec2-user
  roles:
  - { role: geerlingguy.git, become: true }
  tags:
    - git

- name: Create capistrano shared directories
  hosts: webservers
  remote_user: ec2-user
  tasks:
  - name: "Create shared directory and shared config directory"
    file: path=/var/www/phydo/shared/config state=directory owner=ec2-user group=ec2-user force=yes
    become: true
  tags:
    - capistrano

- name: restart httpd
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - service: name=httpd state=restarted enabled=yes
      become: true
