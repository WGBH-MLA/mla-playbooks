---
# This playbook deploys the application stack required for Open Vault or AAPB

- name: Install build tools
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - yum:
        name: "@Development tools"
        state: present

- name: install and upgrade yum packages
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - yum:  { name: '*', state: latest }
    # TODO: Figure out a better way to specify the ruby version. The (current)
    # Amazon Linux AMI comes with Ruby 2.0, but this will probably change.
    - yum: { name: 'ruby20', state: removed }
    - yum: { name: 'ruby22', state: removed }
    - yum: { name: 'ruby22-devel', state: removed }
    - yum: { name: 'zlib-devel', state: present }
    - yum: { name: 'openssl-devel', state: present }
    - yum: { name: 'ruby-devel', state: present }
    - yum: { name: 'java', state: present }

  tags:
    - yum-packages

# Amazon changed how newer Ruby packages are installed. There's probably a better
# way out there.
- name: Installs Ruby 2.4 via amazon-linux-extras
  remote_user: ec2-user
  hosts: webservers
  become: true
  tasks:
    - command: amazon-linux-extras install ruby2.4 -y

- name: install yum packages for s3fs requirements
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - yum: { name: 'git', state: present }
    - yum: { name: 'libcurl-devel', state: present }
    - yum: { name: 'libxml2-devel', state: present }
    - yum: { name: 'make', state: present }
    - yum: { name: 'openssl-devel', state: present }
    - yum: { name: 'ruby-devel', state: present}

  tags:
    - yum-packages

- name: Install Git
  hosts: webservers
  remote_user: ec2-user
  roles:
  - { role: geerlingguy.git, become: true }
  tags:
    - git

- name: create and chown approot
  hosts: webservers
  remote_user: ec2-user
  become: yes
  tasks:
    - file: { state: directory, path: /var/www/{{ app_name }}, owner: ec2-user }
  tags:
    - chowned

# Required for nokogiri gem install
- name: Install patch
  hosts: webservers
  remote_user: ec2-user
  roles:
    - { role: patch, become: true }

- name: Install libcurl-devel
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - yum: name=libcurl-devel
      become: yes
      become_method: sudo
  tags:
    - libcurl-devel

- name: Install sqlite-devel
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - yum: name=sqlite-devel
      become: yes
      become_method: sudo
  tags:
    - sqlite-devel

- name: Install apache webserver
  hosts: webservers
  remote_user: ec2-user
  roles:
    - { role: httpd, become: true }

- name: Config apache virtual host
  hosts: webservers
  remote_user: ec2-user
  sudo: yes
  tasks:
    - file:
        state: directory
        path: /etc/httpd/sites-available
    - file:
        state: directory
        path: /etc/httpd/sites-enabled
    - template:
        src: templates/{{ app_name }}.conf
        dest: /etc/httpd/sites-available/{{ app_name }}.conf
    - file:
        state: link
        src: /etc/httpd/sites-available/{{ app_name }}.conf
        dest: /etc/httpd/sites-enabled/{{ app_name }}.conf
    - lineinfile:
        dest: /etc/httpd/conf/httpd.conf
        regexp: 'include \/etc\/httpd\/sites-enabled\/'
        line: "include /etc/httpd/sites-enabled/"
  tags:
    - apache-vhost-config

- name: Install Phusion Passenger
  hosts: webservers
  remote_user: ec2-user
  become: true
  # needs path to ruby gem executables in /usr/local/bin
  environment:
    PATH: '{{ ansible_env.PATH }}:/usr/local/bin'
  roles:
    - { role: passenger, become: true }
  tags:
    - passenger

- name: Create capistrano shared directories
  hosts: webservers
  remote_user: ec2-user
  tasks:
  - name: "Create document root, shared directory, and shared config directory"
    file: path=/var/www/{{ app_name }}/shared/config state=directory owner=ec2-user group=ec2-user force=yes
    become: true
  tags:
    - capistrano

- name: install bundler
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - gem: { name: bundler, state: present, version: 1.17.3 }

  tags:
    - bundler

- name: install the ruby racer
  hosts: webservers
  remote_user: ec2-user
  tasks:
    - gem: "name=therubyracer state=present"
      become: true

- name: configure logrotate for httpd and jettywrapper logs
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - template:
        src: templates/etc/logrotate.d/httpd
        dest: /etc/logrotate.d/httpd
    - template:
        src: templates/etc/logrotate.d/jettywrapper
        dest: /etc/logrotate.d/jettywrapper
    - template:
        src: templates/etc/cron.hourly/logrotate
        dest: /etc/cron.hourly/logrotate
        mode: 0755
  tags:
    - logrotate

- name: restart httpd
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - service:
        name: httpd
        state: restarted
