---
# This playbook deploys the application stack required for Transcript Editor

# TODOs:
# Need to create database.yml and application.yml in shared directories created
# here.
# Add variables to ec2-user ~/.bashrc
# sudo su - postgres, then /usr/bin/pg_ctl -D /var/lib/pgsql/data/ start
# set up postgres user
# change pg_hba.conf login method to ident for pguser

- name: Install build tools
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - yum:
        name: "@Development tools"
        state: present

- name: install and upgrade yum packages
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - yum: { name: '*', state: latest }
    - yum: { name: 'ruby20', state: removed }
    - yum: { name: 'ruby22', state: present }
    - yum: { name: 'ruby22-devel', state: present }
    - yum: { name: 'zlib-devel', state: present }
    - yum: { name: 'openssl-devel', state: present }
    - yum: { name: 'ruby-devel', state: present }
    - yum: { name: 'libcurl-devel', state: present }
    - yum: { name: 'httpd', state: present }
    - yum: { name: 'httpd-devel', state: present }
    - yum: { name: 'apr-devel', state: present }
    - yum: { name: 'apr-util-devel', state: present }

  tags:
    - yum-packages

- name: Install Git
  hosts: webservers
  remote_user: ec2-user
  roles:
  - { role: geerlingguy.git, become: true }
  tags:
    - git

- name: Configure servers with RVM ruby support
  hosts: webservers
  remote_user: ec2-user
  become: false
  roles:
    - { role: rvm.ruby,
        tags: ruby,
        rvm1_rubies: ['ruby-2.3.0'],
        rvm1_bundler_install: true,
        rvm1_user: ec2-user,
      }
  tags:
    - rvm

- name: Install Phusion Passenger
  hosts: webservers
  remote_user: ec2-user
  become: false
  tasks:
    - shell: rvmsudo gem install passenger
  tags:
    - passenger

- name: Install Apache Webserver
  hosts: webservers
  remote_user: ec2-user
  become: false
  tasks:
    - shell: rvmsudo passenger-install-apache2-module --auto
  tags:
    - passenger-install-apache2-module

- name: Installs and Sets Up postgresql9.6 via amazon-linux-extras
  remote_user: ec2-user
  hosts: webservers
  become: true
  become_user: ec2-user
  tasks:
    - shell: rvmsudo amazon-linux-extras install postgresql9.6 -y
    - shell: rvmsudo yum install postgresql-server -y
    # need to only run the first time. errors on subsequent.
    # - shell: rvmsudo /usr/bin/postgresql-setup --initdb
  tags:
    - postgresql

- name: Adds updated pg_hba.conf for PostgreSQL config
  hosts: webservers
  remote_user: ec2-user
  sudo: yes
  tasks:
    - template:
        src: "templates/other/pg_hba.conf"
        dest: "/var/lib/pgsql/data/transcript-editor.conf"
  tags:
    - pga_hba.conf

- name: create and chown approot
  hosts: webservers
  remote_user: ec2-user
  become: yes
  tasks:
    - file: { state: directory, path: "/var/www/transcript-editor", owner: ec2-user }
  tags:
    - chowned

- name: create and chown shared
  hosts: webservers
  remote_user: ec2-user
  become: yes
  tasks:
    - file: { state: directory, path: "/var/www/transcript-editor/shared", owner: ec2-user }
  tags:
    - chowned

# # Required for nokogiri gem install
- name: Install patch
  hosts: webservers
  remote_user: ec2-user
  roles:
    - { role: patch, become: true }

- name: Config apache virtual host
  hosts: webservers
  remote_user: ec2-user
  sudo: yes
  tasks:
    - file:
        state: directory
        path: /etc/httpd/sites-available
    - file:
        state: directory
        path: /etc/httpd/sites-enabled
    - template:
        src: "templates/etc/httpd/sites-available/transcript-editor.conf"
        dest: "/etc/httpd/sites-available/transcript-editor.conf"
    - file:
        state: link
        src: "/etc/httpd/sites-available/transcript-editor.conf"
        dest: "/etc/httpd/sites-enabled/transcript-editor.conf"
    - lineinfile:
        dest: /etc/httpd/conf/httpd.conf
        regexp: 'include \/etc\/httpd\/sites-enabled\/'
        line: "include /etc/httpd/sites-enabled/"
  tags:
    - apache-vhost-config

- name: Create capistrano shared directories
  hosts: webservers
  remote_user: ec2-user
  tasks:
  - name: "Create document root, shared directory, and shared config directory"
    file: path="/var/www/transcript-editor/shared/config" state=directory owner=ec2-user group=ec2-user force=yes
    become: true
  tags:
    - capistrano

- name: Install therubyracer
  hosts: webservers
  remote_user: ec2-user
  become: false
  tasks:
    - shell: rvmsudo gem install therubyracer
  tags:
    - therubyracer

# This needs to be tested.
- name: Install nvm and node
  hosts: webservers
  remote_user: ec2-user
  become: false
  tasks:
    - shell:  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash
    - shell: nvm install node

- name: configure logrotate for httpd and jettywrapper logs
  hosts: webservers
  remote_user: ec2-user
  become: true
  tasks:
    - template:
        src: templates/etc/logrotate.d/httpd
        dest: /etc/logrotate.d/httpd
    - template:
        src: templates/etc/cron.hourly/logrotate
        dest: /etc/cron.hourly/logrotate
        mode: 0755
  tags:
    - logrotate

- name: restart httpd
  hosts: webservers
  remote_user: ec2-user
  become: false
  tasks:
    - shell: rvmsudo /usr/sbin/apachectl restart
  tags:
    - restart httpd